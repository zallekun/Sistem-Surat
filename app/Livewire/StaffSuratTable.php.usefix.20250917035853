<?php

namespace App\Livewire;

use Livewire\Component;
use App\Models\Surat;
use Illuminate\Support\Facades\Auth;
use Livewire\WithPagination;
use App\Models\StatusSurat;
use App\Models\Tracking;
use App\Models\Jabatan;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use App\Notifications\VerificationCompleteNotification;
use App\Notifications\SuratRejectedNotification;
use WithPagination;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use App\Models\Surat;
use App\Models\StatusSurat;

class StaffSuratTable extends Component
{

    use WithPagination;

    public $search = '';
    public $sortField = 'tanggal_surat';
    public $sortDirection = 'desc';
    public $filterStatus = '';
    public $filterTujuanJabatan = '';

    protected $listeners = ['suratSubmitted' => '$refresh'];

    
    public function render()
    {
        $user = Auth::user()->load('jabatan', 'prodi', 'role');
        $userJabatan = $user->jabatan->nama_jabatan ?? null;

        Log::info('StaffSuratTable render for user: ' . $user->email . ' (ID: ' . $user->id . ', Role: ' . ($user->role->name ?? 'N/A') . ', Jabatan: ' . $userJabatan . ', Prodi ID: ' . ($user->prodi_id ?? 'N/A') . ')');

        $draftStatusId = StatusSurat::where('kode_status', 'draft')->first()->id ?? null;
        $needsRevisionStatusId = StatusSurat::where('kode_status', 'ditolak_umum')->first()->id ?? null;

        $suratsQuery = Surat::with(['jenisSurat', 'currentStatus', 'createdBy', 'tujuanJabatan']);

        // Apply authorization logic based on roles
        $roleName = $user->role->name ?? null;

        if ($roleName === 'admin' || $roleName === 'super_admin') {
            Log::info('No filter applied for Admin/Super Admin');
            // Admin/Super Admin can see all surat
        } elseif ($roleName === 'staff_prodi') {
            Log::info('Applying filter for Staff Prodi: prodi_id = ' . $user->prodi_id . ' and created_by = ' . $user->id);
            $suratsQuery->where('prodi_id', $user->prodi_id)
                        ->where('created_by', $user->id);
        } elseif ($roleName === 'staff_fakultas') {
            Log::info('Applying filter for Staff Fakultas');
            $suratsQuery->where('fakultas_id', $user->fakultas_id)
                        ->where('created_by', $user->id);
        } elseif ($roleName === 'kaprodi') {
            // Kaprodi tracking: show review_kaprodi, disetujui_kaprodi, ditolak_kaprodi
            $reviewStatus = StatusSurat::where('kode_status', 'review_kaprodi')->first();
            $approvedStatus = StatusSurat::where('kode_status', 'disetujui_kaprodi')->first();
            $rejectedStatus = StatusSurat::where('kode_status', 'ditolak_kaprodi')->first();
            
            $statusIds = [];
            if ($reviewStatus) $statusIds[] = $reviewStatus->id;
            if ($approvedStatus) $statusIds[] = $approvedStatus->id;
            if ($rejectedStatus) $statusIds[] = $rejectedStatus->id;
            
            Log::info('Applying filter for Kaprodi: prodi_id = ' . $user->prodi_id . ' with statuses: ' . implode(',', $statusIds));
            $suratsQuery->where('prodi_id', $user->prodi_id);
            
            if (!empty($statusIds)) {
                $suratsQuery->whereIn('status_id', $statusIds);
            } else {
                $suratsQuery->whereRaw('0 = 1');
            }
        } else {
            Log::info('Applying filter for other roles: no surat shown');
            $suratsQuery->whereRaw('0 = 1');
        }

        // Apply search filter if exists
        if ($this->search) {
            $suratsQuery->where(function($query) {
                $query->where('nomor_surat', 'like', '%' . $this->search . '%')
                      ->orWhere('perihal', 'like', '%' . $this->search . '%');
            });
        }

        // Apply status filter if exists
        if ($this->statusFilter) {
            $suratsQuery->where('status_id', $this->statusFilter);
        }

        // Get paginated results
        $surats = $suratsQuery->orderBy('created_at', 'desc')->paginate(10);

        // Get all statuses for filter dropdown
        $allStatuses = StatusSurat::orderBy('urutan')->get();

        Log::info('Total surat found: ' . $surats->total());

        return view('livewire.staff-surat-table', [
            'surats' => $surats,
            'allStatuses' => $allStatuses,
            'draftStatusId' => $draftStatusId,
            'needsRevisionStatusId' => $needsRevisionStatusId,
        ]);
    }
}